// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pkg/pb/auth/auth-service.proto

package auth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusCode int32

const (
	StatusCode_ErrInternal StatusCode = 0
	StatusCode_OK          StatusCode = 1
	// There's not any matched user with this auth token
	StatusCode_ErrUnauthorized StatusCode = 2
	// User with this token exists but can't upload/download any object.
	// (e.g., it has not download/upload permission or it's disabled)
	StatusCode_ErrForbidden StatusCode = 3
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0: "ErrInternal",
		1: "OK",
		2: "ErrUnauthorized",
		3: "ErrForbidden",
	}
	StatusCode_value = map[string]int32{
		"ErrInternal":     0,
		"OK":              1,
		"ErrUnauthorized": 2,
		"ErrForbidden":    3,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_pb_auth_auth_service_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_pkg_pb_auth_auth_service_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{0}
}

type DownloadAccessReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthToken     string                 `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	ObjectTokens  []string               `protobuf:"bytes,2,rep,name=ObjectTokens,proto3" json:"ObjectTokens,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadAccessReq) Reset() {
	*x = DownloadAccessReq{}
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadAccessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAccessReq) ProtoMessage() {}

func (x *DownloadAccessReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAccessReq.ProtoReflect.Descriptor instead.
func (*DownloadAccessReq) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadAccessReq) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *DownloadAccessReq) GetObjectTokens() []string {
	if x != nil {
		return x.ObjectTokens
	}
	return nil
}

type UploadAccessReq struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AuthToken string                 `protobuf:"bytes,1,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	// The file types to check if could be uploaded and number of each file type we're going to upload
	ObjectTypes   map[string]int64 `protobuf:"bytes,2,rep,name=ObjectTypes,proto3" json:"ObjectTypes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAccessReq) Reset() {
	*x = UploadAccessReq{}
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAccessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAccessReq) ProtoMessage() {}

func (x *UploadAccessReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAccessReq.ProtoReflect.Descriptor instead.
func (*UploadAccessReq) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAccessReq) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *UploadAccessReq) GetObjectTypes() map[string]int64 {
	if x != nil {
		return x.ObjectTypes
	}
	return nil
}

type AcceptableType struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FileType string                 `protobuf:"bytes,1,opt,name=FileType,proto3" json:"FileType,omitempty"`
	IsAllow  bool                   `protobuf:"varint,2,opt,name=IsAllow,proto3" json:"IsAllow,omitempty"`
	// Max size of the file in Kbytes
	MaxSize       uint64 `protobuf:"varint,3,opt,name=MaxSize,proto3" json:"MaxSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptableType) Reset() {
	*x = AcceptableType{}
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptableType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptableType) ProtoMessage() {}

func (x *AcceptableType) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptableType.ProtoReflect.Descriptor instead.
func (*AcceptableType) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptableType) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *AcceptableType) GetIsAllow() bool {
	if x != nil {
		return x.IsAllow
	}
	return false
}

func (x *AcceptableType) GetMaxSize() uint64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

type AllowDownloadResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    StatusCode             `protobuf:"varint,1,opt,name=StatusCode,proto3,enum=auth.StatusCode" json:"StatusCode,omitempty"`
	Errmsg        string                 `protobuf:"bytes,2,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
	Files         map[string]bool        `protobuf:"bytes,3,rep,name=Files,proto3" json:"Files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowDownloadResult) Reset() {
	*x = AllowDownloadResult{}
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowDownloadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowDownloadResult) ProtoMessage() {}

func (x *AllowDownloadResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowDownloadResult.ProtoReflect.Descriptor instead.
func (*AllowDownloadResult) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{3}
}

func (x *AllowDownloadResult) GetStatusCode() StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return StatusCode_ErrInternal
}

func (x *AllowDownloadResult) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *AllowDownloadResult) GetFiles() map[string]bool {
	if x != nil {
		return x.Files
	}
	return nil
}

type AllowUploadResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    StatusCode             `protobuf:"varint,1,opt,name=StatusCode,proto3,enum=auth.StatusCode" json:"StatusCode,omitempty"`
	Errmsg        string                 `protobuf:"bytes,2,opt,name=Errmsg,proto3" json:"Errmsg,omitempty"`
	FileTypes     []*AcceptableType      `protobuf:"bytes,3,rep,name=FileTypes,proto3" json:"FileTypes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowUploadResult) Reset() {
	*x = AllowUploadResult{}
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowUploadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowUploadResult) ProtoMessage() {}

func (x *AllowUploadResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_auth_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowUploadResult.ProtoReflect.Descriptor instead.
func (*AllowUploadResult) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_auth_service_proto_rawDescGZIP(), []int{4}
}

func (x *AllowUploadResult) GetStatusCode() StatusCode {
	if x != nil {
		return x.StatusCode
	}
	return StatusCode_ErrInternal
}

func (x *AllowUploadResult) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *AllowUploadResult) GetFileTypes() []*AcceptableType {
	if x != nil {
		return x.FileTypes
	}
	return nil
}

var File_pkg_pb_auth_auth_service_proto protoreflect.FileDescriptor

const file_pkg_pb_auth_auth_service_proto_rawDesc = "" +
	"\n" +
	"\x1epkg/pb/auth/auth-service.proto\x12\x04auth\"U\n" +
	"\x11DownloadAccessReq\x12\x1c\n" +
	"\tAuthToken\x18\x01 \x01(\tR\tAuthToken\x12\"\n" +
	"\fObjectTokens\x18\x02 \x03(\tR\fObjectTokens\"\xb9\x01\n" +
	"\x0fUploadAccessReq\x12\x1c\n" +
	"\tAuthToken\x18\x01 \x01(\tR\tAuthToken\x12H\n" +
	"\vObjectTypes\x18\x02 \x03(\v2&.auth.UploadAccessReq.ObjectTypesEntryR\vObjectTypes\x1a>\n" +
	"\x10ObjectTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"`\n" +
	"\x0eAcceptableType\x12\x1a\n" +
	"\bFileType\x18\x01 \x01(\tR\bFileType\x12\x18\n" +
	"\aIsAllow\x18\x02 \x01(\bR\aIsAllow\x12\x18\n" +
	"\aMaxSize\x18\x03 \x01(\x04R\aMaxSize\"\xd5\x01\n" +
	"\x13AllowDownloadResult\x120\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x0e2\x10.auth.statusCodeR\n" +
	"StatusCode\x12\x16\n" +
	"\x06Errmsg\x18\x02 \x01(\tR\x06Errmsg\x12:\n" +
	"\x05Files\x18\x03 \x03(\v2$.auth.AllowDownloadResult.FilesEntryR\x05Files\x1a8\n" +
	"\n" +
	"FilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\x91\x01\n" +
	"\x11AllowUploadResult\x120\n" +
	"\n" +
	"StatusCode\x18\x01 \x01(\x0e2\x10.auth.statusCodeR\n" +
	"StatusCode\x12\x16\n" +
	"\x06Errmsg\x18\x02 \x01(\tR\x06Errmsg\x122\n" +
	"\tFileTypes\x18\x03 \x03(\v2\x14.auth.AcceptableTypeR\tFileTypes*L\n" +
	"\n" +
	"statusCode\x12\x0f\n" +
	"\vErrInternal\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\x13\n" +
	"\x0fErrUnauthorized\x10\x02\x12\x10\n" +
	"\fErrForbidden\x10\x032\x96\x01\n" +
	"\x04Auth\x12I\n" +
	"\x11IsAllowedDownload\x12\x17.auth.DownloadAccessReq\x1a\x19.auth.AllowDownloadResult\"\x00\x12C\n" +
	"\x0fIsAllowedUpload\x12\x15.auth.UploadAccessReq\x1a\x17.auth.AllowUploadResult\"\x00B4Z2github.com/q-sharafian/file-transfer/internal/authb\x06proto3"

var (
	file_pkg_pb_auth_auth_service_proto_rawDescOnce sync.Once
	file_pkg_pb_auth_auth_service_proto_rawDescData []byte
)

func file_pkg_pb_auth_auth_service_proto_rawDescGZIP() []byte {
	file_pkg_pb_auth_auth_service_proto_rawDescOnce.Do(func() {
		file_pkg_pb_auth_auth_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_pb_auth_auth_service_proto_rawDesc), len(file_pkg_pb_auth_auth_service_proto_rawDesc)))
	})
	return file_pkg_pb_auth_auth_service_proto_rawDescData
}

var file_pkg_pb_auth_auth_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_pb_auth_auth_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_pb_auth_auth_service_proto_goTypes = []any{
	(StatusCode)(0),             // 0: auth.statusCode
	(*DownloadAccessReq)(nil),   // 1: auth.DownloadAccessReq
	(*UploadAccessReq)(nil),     // 2: auth.UploadAccessReq
	(*AcceptableType)(nil),      // 3: auth.AcceptableType
	(*AllowDownloadResult)(nil), // 4: auth.AllowDownloadResult
	(*AllowUploadResult)(nil),   // 5: auth.AllowUploadResult
	nil,                         // 6: auth.UploadAccessReq.ObjectTypesEntry
	nil,                         // 7: auth.AllowDownloadResult.FilesEntry
}
var file_pkg_pb_auth_auth_service_proto_depIdxs = []int32{
	6, // 0: auth.UploadAccessReq.ObjectTypes:type_name -> auth.UploadAccessReq.ObjectTypesEntry
	0, // 1: auth.AllowDownloadResult.StatusCode:type_name -> auth.statusCode
	7, // 2: auth.AllowDownloadResult.Files:type_name -> auth.AllowDownloadResult.FilesEntry
	0, // 3: auth.AllowUploadResult.StatusCode:type_name -> auth.statusCode
	3, // 4: auth.AllowUploadResult.FileTypes:type_name -> auth.AcceptableType
	1, // 5: auth.Auth.IsAllowedDownload:input_type -> auth.DownloadAccessReq
	2, // 6: auth.Auth.IsAllowedUpload:input_type -> auth.UploadAccessReq
	4, // 7: auth.Auth.IsAllowedDownload:output_type -> auth.AllowDownloadResult
	5, // 8: auth.Auth.IsAllowedUpload:output_type -> auth.AllowUploadResult
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_pb_auth_auth_service_proto_init() }
func file_pkg_pb_auth_auth_service_proto_init() {
	if File_pkg_pb_auth_auth_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_pb_auth_auth_service_proto_rawDesc), len(file_pkg_pb_auth_auth_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_auth_auth_service_proto_goTypes,
		DependencyIndexes: file_pkg_pb_auth_auth_service_proto_depIdxs,
		EnumInfos:         file_pkg_pb_auth_auth_service_proto_enumTypes,
		MessageInfos:      file_pkg_pb_auth_auth_service_proto_msgTypes,
	}.Build()
	File_pkg_pb_auth_auth_service_proto = out.File
	file_pkg_pb_auth_auth_service_proto_goTypes = nil
	file_pkg_pb_auth_auth_service_proto_depIdxs = nil
}
